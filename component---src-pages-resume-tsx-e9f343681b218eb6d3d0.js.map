{"version":3,"file":"component---src-pages-resume-tsx-e9f343681b218eb6d3d0.js","mappings":"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","sources":["webpack://@adamgraham/portfolio/./src/pages/resume.tsx"],"sourcesContent":["import { Badge, Col, Icon, Link, Row, Stack, Text } from '@zigurous/forge-react'; // prettier-ignore\r\nimport { graphql, type PageProps, type HeadFC } from 'gatsby';\r\nimport React, { useState } from 'react';\r\nimport { Metadata, Page } from '../components';\r\nimport { baseUri } from '../links';\r\nimport type { ResumeEducation, ResumeExperience, ResumeProject, ResumeQueryData, ResumeSkills } from '../types'; // prettier-ignore\r\nimport '../styles/resume.css';\r\n\r\nexport default function Resume({ data, location }: PageProps<ResumeQueryData>) {\r\n  const resume = data.resume.nodes[0];\r\n  return (\r\n    <Page id=\"resume\" hideHeader location={location}>\r\n      <div className=\"container\">\r\n        <header className=\"row mb-lg\">\r\n          <Col className=\"mb-xl\" size=\"12\" lg=\"8\">\r\n            <Text\r\n              as=\"h1\"\r\n              id=\"name\"\r\n              marginBottom=\"sm\"\r\n              type=\"display\"\r\n              weight=\"800\"\r\n            >\r\n              {resume.name}\r\n            </Text>\r\n            <Text id=\"title\" marginBottom=\"lg\" type=\"subtitle\">\r\n              {resume.title}\r\n            </Text>\r\n            <Text\r\n              id=\"summary\"\r\n              className=\"text-balance\"\r\n              color=\"subtle\"\r\n              type=\"body\"\r\n            >\r\n              {resume.summary}\r\n            </Text>\r\n          </Col>\r\n          <Col\r\n            id=\"contact\"\r\n            className=\"flex flex-col justify-end mb-xl\"\r\n            style={{ gap: 'var(--spacing-sm)' }}\r\n            size=\"12\"\r\n            lg=\"4\"\r\n          >\r\n            {resume.contact.map(contact => (\r\n              <Text\r\n                id={contact.id}\r\n                key={contact.id}\r\n                className=\"inline-flex align-center\"\r\n                color=\"subtle\"\r\n                type=\"body-sm\"\r\n                weight=\"500\"\r\n              >\r\n                <Icon\r\n                  className=\"mr-sm\"\r\n                  icon={contact.icon}\r\n                  type={\r\n                    contact.id === 'github' || contact.id === 'linkedin'\r\n                      ? 'social'\r\n                      : 'material'\r\n                  }\r\n                />\r\n                {contact.link ? (\r\n                  <Link href={contact.link} external unstyled>\r\n                    {contact.text}\r\n                  </Link>\r\n                ) : (\r\n                  contact.text\r\n                )}\r\n              </Text>\r\n            ))}\r\n          </Col>\r\n        </header>\r\n        <Row>\r\n          <Col size=\"12\" lg=\"8\">\r\n            <ResumeExperience experience={resume.experience} />\r\n          </Col>\r\n          <Col size=\"12\" lg=\"4\">\r\n            <ResumeEducation education={resume.education} />\r\n            <ResumeSkills skills={resume.skills} />\r\n          </Col>\r\n        </Row>\r\n        <ResumeProjects projects={resume.projects} />\r\n      </div>\r\n    </Page>\r\n  );\r\n}\r\n\r\ninterface ResumeSectionProps {\r\n  children: React.ReactNode;\r\n  icon?: string;\r\n  id: string;\r\n  title?: string;\r\n}\r\n\r\nfunction ResumeSection({ children, icon, id, title }: ResumeSectionProps) {\r\n  const showIcons = false;\r\n  return (\r\n    <section id={id}>\r\n      {title && (\r\n        <Text as=\"h2\" marginBottom=\"xl\" type=\"title\">\r\n          {showIcons && icon && (\r\n            <Icon\r\n              className=\"mr-sm\"\r\n              icon={icon}\r\n              size=\"md\"\r\n              style={{ verticalAlign: 'baseline' }}\r\n            />\r\n          )}\r\n          {title}\r\n        </Text>\r\n      )}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nfunction ResumeEducation({ education }: { education: ResumeEducation[] }) {\r\n  return (\r\n    <ResumeSection icon=\"school\" id=\"education\" title=\"Education\">\r\n      {education.map(edu => (\r\n        <div key={`${edu.school}-${edu.degree}`}>\r\n          <Text id=\"school\" marginBottom=\"xxs\" type=\"title-sm\">\r\n            {edu.school}\r\n          </Text>\r\n          <Text\r\n            id=\"degree\"\r\n            className=\"line-tight\"\r\n            color=\"subtle\"\r\n            marginBottom=\"xs\"\r\n            size=\"md\"\r\n            weight=\"500\"\r\n          >\r\n            {edu.degree}\r\n          </Text>\r\n          {edu.notes?.map(note => (\r\n            <Text\r\n              className=\"line-tight\"\r\n              color=\"muted\"\r\n              marginBottom=\"xxxs\"\r\n              type=\"body-sm\"\r\n              key={note}\r\n            >\r\n              {note}\r\n            </Text>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </ResumeSection>\r\n  );\r\n}\r\n\r\nfunction ResumeExperience({ experience }: { experience: ResumeExperience[] }) {\r\n  const [showMore, setShowMore] = useState(false);\r\n  return (\r\n    <ResumeSection icon=\"work_history\" id=\"experience\" title=\"Experience\">\r\n      {experience.map(job => (\r\n        <div className=\"relative\" key={`${job.company}-${job.position}`}>\r\n          <div aria-hidden className=\"timeline-line\" />\r\n          <div aria-hidden className=\"timeline-dot\" />\r\n          <div className=\"ml-xxl\">\r\n            <Text\r\n              id=\"position\"\r\n              className=\"flex align-center\"\r\n              marginBottom=\"xxs\"\r\n              type=\"title-sm\"\r\n            >\r\n              {job.position}{' '}\r\n              <Text as=\"span\" className=\"ml-xs\" color=\"subtle\" size=\"lg\">\r\n                @{' '}\r\n                {job.link ? (\r\n                  <Link href={job.link} external unstyled>\r\n                    {job.company}\r\n                  </Link>\r\n                ) : (\r\n                  job.company\r\n                )}\r\n              </Text>\r\n            </Text>\r\n            <Text id=\"date\" color=\"muted\" size=\"sm\" type=\"caption\" weight=\"600\">\r\n              {job.date}\r\n            </Text>\r\n            <Text\r\n              color=\"subtle\"\r\n              marginBottom={job.notes ? 'lg' : undefined}\r\n              marginTop=\"xs\"\r\n              type=\"body\"\r\n            >\r\n              {job.summary}\r\n            </Text>\r\n            {job.notes && (\r\n              <ul className=\"body\">\r\n                {job.notes.map(item => (\r\n                  <li className=\"relative mb-sm\" key={item.title}>\r\n                    <div aria-hidden className=\"timeline-dot-small\" />\r\n                    <Text bold color=\"subtle\" type=\"body\">\r\n                      {item.title}\r\n                    </Text>\r\n                    <Text id=\"description\" color=\"subtle\" type=\"body-sm\">\r\n                      {item.description}\r\n                    </Text>\r\n                  </li>\r\n                ))}\r\n                {job.more && (\r\n                  <div className=\"print-none\">\r\n                    {!showMore && (\r\n                      <Text className=\"link mt-sm\" size=\"xs\">\r\n                        <button onClick={() => setShowMore(true)}>\r\n                          Show More\r\n                        </button>\r\n                      </Text>\r\n                    )}\r\n                    {showMore && (\r\n                      <>\r\n                        <hr className=\"thick my-md\" />\r\n                        {job.more.map(item => (\r\n                          <li className=\"relative mb-sm\" key={item.title}>\r\n                            <div aria-hidden className=\"timeline-dot-small\" />\r\n                            <Text bold color=\"subtle\" type=\"body\">\r\n                              {item.title}\r\n                            </Text>\r\n                            <Text\r\n                              id=\"description\"\r\n                              color=\"subtle\"\r\n                              type=\"body-sm\"\r\n                            >\r\n                              {item.description}\r\n                            </Text>\r\n                          </li>\r\n                        ))}\r\n                        <Text className=\"mt-sm link\" size=\"xs\">\r\n                          <button onClick={() => setShowMore(false)}>\r\n                            Show Less\r\n                          </button>\r\n                        </Text>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </ul>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </ResumeSection>\r\n  );\r\n}\r\n\r\nfunction ResumeSkills({ skills }: { skills: ResumeSkills[] }) {\r\n  return (\r\n    <ResumeSection icon=\"psychology\" id=\"skills\" title=\"Skills\">\r\n      {skills.map(list => (\r\n        <div className=\"mb-xl\" key={list.title}>\r\n          <Text color=\"subtle\" marginBottom=\"sm\" type=\"body-lg\" weight=\"600\">\r\n            {list.title}\r\n          </Text>\r\n          <Stack spacing=\"xs\" wrap>\r\n            {list.items.map(item => (\r\n              <Badge key={item} shape=\"rounded\" size=\"sm\" variant=\"tint\">\r\n                {item}\r\n              </Badge>\r\n            ))}\r\n          </Stack>\r\n        </div>\r\n      ))}\r\n    </ResumeSection>\r\n  );\r\n}\r\n\r\nfunction ResumeProjects({ projects }: { projects: ResumeProject[] }) {\r\n  return (\r\n    <ResumeSection icon=\"apps\" id=\"projects\" title=\"Projects\">\r\n      <Row>\r\n        <Col>\r\n          <ul className=\"flex flex-wrap\" style={{ gap: 'var(--spacing-lg)' }}>\r\n            {projects.map(project => (\r\n              <ResumeProject key={project.name} project={project} />\r\n            ))}\r\n          </ul>\r\n        </Col>\r\n      </Row>\r\n    </ResumeSection>\r\n  );\r\n}\r\n\r\nfunction ResumeProject({ project }: { project: ResumeProject }) {\r\n  return (\r\n    <li id={project.name.toLowerCase().replace(' ', '-')} key={project.name}>\r\n      <Stack align=\"center\">\r\n        <Text\r\n          id=\"name\"\r\n          className=\"line-tight\"\r\n          color=\"primary\"\r\n          marginBottom=\"xxxs\"\r\n          type=\"body-lg\"\r\n          weight=\"600\"\r\n        >\r\n          <Link href={project.link} external unstyled>\r\n            {project.name}\r\n          </Link>\r\n        </Text>\r\n        {project.tech && (\r\n          <Text\r\n            id=\"tech\"\r\n            className=\"mt-xxxs ml-sm\"\r\n            color=\"muted\"\r\n            size=\"xs\"\r\n            type=\"caption\"\r\n            weight=\"600\"\r\n          >\r\n            {project.tech.map((tech, index) => (\r\n              <span key={tech}>\r\n                {tech}\r\n                {index < project.tech!.length - 1 ? ', ' : ''}\r\n              </span>\r\n            ))}\r\n          </Text>\r\n        )}\r\n      </Stack>\r\n      <Text id=\"description\" color=\"subtle\" type=\"body\">\r\n        {project.description}\r\n      </Text>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport const Head: HeadFC = () => {\r\n  return (\r\n    <Metadata\r\n      page={{\r\n        url: `${baseUri}/resume`,\r\n        title: 'Adam Graham • Resume',\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\n  query ResumeQuery {\r\n    resume: allResumeJson {\r\n      nodes {\r\n        name\r\n        title\r\n        summary\r\n        contact {\r\n          id\r\n          icon\r\n          text\r\n          link\r\n        }\r\n        education {\r\n          school\r\n          degree\r\n          notes\r\n        }\r\n        experience {\r\n          date\r\n          company\r\n          position\r\n          summary\r\n          link\r\n          notes {\r\n            title\r\n            description\r\n          }\r\n          more {\r\n            title\r\n            description\r\n          }\r\n        }\r\n        skills {\r\n          title\r\n          items\r\n        }\r\n        projects {\r\n          name\r\n          description\r\n          link\r\n          tech\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["Resume","_ref","data","location","resume","nodes","React","Page","id","hideHeader","className","Col","size","lg","Text","as","marginBottom","type","weight","name","title","color","summary","style","gap","contact","map","key","Icon","icon","link","Link","href","external","unstyled","text","Row","ResumeExperience","experience","ResumeEducation","education","ResumeSkills","skills","ResumeProjects","projects","ResumeSection","_ref2","children","_ref3","edu","_edu$notes","school","degree","notes","note","_ref4","showMore","setShowMore","useState","job","company","position","date","undefined","marginTop","item","bold","description","more","onClick","_ref5","list","Stack","spacing","wrap","items","Badge","shape","variant","_ref6","project","ResumeProject","_ref7","toLowerCase","replace","align","tech","index","length","Head","Metadata","page","url","baseUri"],"sourceRoot":""}